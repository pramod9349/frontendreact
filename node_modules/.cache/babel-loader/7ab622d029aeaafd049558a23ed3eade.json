{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport * as ReactDOMServer from 'react-dom/server';\n/* tslint:disable align */\n\n/* tslint:disable:no-use-before-declare */\n\nvar compileTemplate = function (Template, context, updateContext) {\n  var result = function (data) {\n    updateContext(context, data);\n    var templateResult = ReactDOMServer.renderToStaticMarkup(React.createElement(Template, __assign({}, context)));\n    var parsed = Number(templateResult);\n    return isNaN(parsed) ? templateResult : parsed;\n  };\n\n  return result;\n};\n\nvar updateGroupHeaderContext = function (context, data) {\n  context.$implicit = context.group = data;\n  context.field = data.field;\n  context.value = data.value;\n  context.aggregates = data.aggregates;\n};\n\nvar updateGroupFooterContext = function (context, data) {\n  context.group = data.group;\n  context.$implicit = context.aggregates = data;\n}; // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n\nvar updateFooterContext = function (_context, _data) {};\n/**\n * @hidden\n */\n\n\nexport var toExporterColumns = function (sourceColumns) {\n  var exporterColumns = [];\n  var columnIndex = 0;\n\n  var addColumns = function (columns, result, level) {\n    columns.forEach(function (column) {\n      if (column.level === level) {\n        var exporterColumn = new ExporterColumn(column, columnIndex);\n        result.push(exporterColumn);\n\n        if (column.children && column.children.length > 1) {\n          var children = exporterColumn.columns = [];\n          addColumns(column.children, children, level + 1);\n        } else {\n          columnIndex++;\n        }\n      }\n    });\n  };\n\n  addColumns(sourceColumns, exporterColumns, 0);\n  return exporterColumns;\n};\n/**\n * @hidden\n */\n\nvar ExporterColumn =\n/** @class */\nfunction () {\n  function ExporterColumn(column, columnIndex) {\n    this.title = column.title;\n    this.field = column.field;\n    this.hidden = column.hidden;\n    this.locked = column.locked;\n    this.width = column.width;\n    this.headerCellOptions = column.headerCellOptions;\n    this.cellOptions = column.cellOptions;\n    this.groupHeaderCellOptions = column.groupHeaderCellOptions;\n    this.groupFooterCellOptions = column.groupFooterCellOptions;\n    this.footerCellOptions = column.footerCellOptions;\n\n    if (column.footer) {\n      this.footerTemplate = compileTemplate(column.footer, {\n        $implicit: column,\n        column: column,\n        columnIndex: columnIndex\n      }, updateFooterContext);\n    }\n\n    if (column.groupFooter) {\n      this.groupFooterTemplate = compileTemplate(column.groupFooter, {\n        column: column,\n        field: column.field\n      }, updateGroupFooterContext);\n    }\n\n    if (column.groupHeader) {\n      this.groupHeaderTemplate = compileTemplate(column.groupHeader, {}, updateGroupHeaderContext);\n    }\n  }\n\n  return ExporterColumn;\n}();\n\nexport { ExporterColumn };","map":{"version":3,"sources":["C:/Users/pramod.katiyar/Documents/Project-git-download/nodeReactfrontend-main/node_modules/@progress/kendo-react-excel-export/dist/es/ooxml/ExporterColumns.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","ReactDOMServer","compileTemplate","Template","context","updateContext","result","data","templateResult","renderToStaticMarkup","createElement","parsed","Number","isNaN","updateGroupHeaderContext","$implicit","group","field","value","aggregates","updateGroupFooterContext","updateFooterContext","_context","_data","toExporterColumns","sourceColumns","exporterColumns","columnIndex","addColumns","columns","level","forEach","column","exporterColumn","ExporterColumn","push","children","title","hidden","locked","width","headerCellOptions","cellOptions","groupHeaderCellOptions","groupFooterCellOptions","footerCellOptions","footer","footerTemplate","groupFooter","groupFooterTemplate","groupHeader","groupHeaderTemplate"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport * as ReactDOMServer from 'react-dom/server';\n/* tslint:disable align */\n/* tslint:disable:no-use-before-declare */\nvar compileTemplate = function (Template, context, updateContext) {\n    var result = function (data) {\n        updateContext(context, data);\n        var templateResult = ReactDOMServer.renderToStaticMarkup(React.createElement(Template, __assign({}, context)));\n        var parsed = Number(templateResult);\n        return isNaN(parsed)\n            ? templateResult\n            : parsed;\n    };\n    return result;\n};\nvar updateGroupHeaderContext = function (context, data) {\n    context.$implicit = context.group = data;\n    context.field = data.field;\n    context.value = data.value;\n    context.aggregates = data.aggregates;\n};\nvar updateGroupFooterContext = function (context, data) {\n    context.group = data.group;\n    context.$implicit = context.aggregates = data;\n};\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nvar updateFooterContext = function (_context, _data) { };\n/**\n * @hidden\n */\nexport var toExporterColumns = function (sourceColumns) {\n    var exporterColumns = [];\n    var columnIndex = 0;\n    var addColumns = function (columns, result, level) {\n        columns.forEach(function (column) {\n            if (column.level === level) {\n                var exporterColumn = new ExporterColumn(column, columnIndex);\n                result.push(exporterColumn);\n                if (column.children && column.children.length > 1) {\n                    var children = exporterColumn.columns = [];\n                    addColumns(column.children, children, level + 1);\n                }\n                else {\n                    columnIndex++;\n                }\n            }\n        });\n    };\n    addColumns(sourceColumns, exporterColumns, 0);\n    return exporterColumns;\n};\n/**\n * @hidden\n */\nvar ExporterColumn = /** @class */ (function () {\n    function ExporterColumn(column, columnIndex) {\n        this.title = column.title;\n        this.field = column.field;\n        this.hidden = column.hidden;\n        this.locked = column.locked;\n        this.width = column.width;\n        this.headerCellOptions = column.headerCellOptions;\n        this.cellOptions = column.cellOptions;\n        this.groupHeaderCellOptions = column.groupHeaderCellOptions;\n        this.groupFooterCellOptions = column.groupFooterCellOptions;\n        this.footerCellOptions = column.footerCellOptions;\n        if (column.footer) {\n            this.footerTemplate = compileTemplate(column.footer, {\n                $implicit: column,\n                column: column,\n                columnIndex: columnIndex\n            }, updateFooterContext);\n        }\n        if (column.groupFooter) {\n            this.groupFooterTemplate = compileTemplate(column.groupFooter, {\n                column: column,\n                field: column.field\n            }, updateGroupFooterContext);\n        }\n        if (column.groupHeader) {\n            this.groupHeaderTemplate =\n                compileTemplate(column.groupHeader, {}, updateGroupHeaderContext);\n        }\n    }\n    return ExporterColumn;\n}());\nexport { ExporterColumn };\n"]},"metadata":{},"sourceType":"module"}