{"ast":null,"code":"import TemplateService from './services/template-service';\nimport getter from './utils/getter';\nimport map from './utils/map';\n\nfunction defaultGroupHeaderTemplate(data) {\n  return data.title + \": \" + data.value;\n}\n\nfunction createArray(length, callback) {\n  var result = [];\n\n  for (var idx = 0; idx < length; idx++) {\n    result.push(callback(idx));\n  }\n\n  return result;\n}\n\nfunction defaultItemId(item) {\n  return item.id;\n}\n\nvar ExcelExporter = function ExcelExporter(options) {\n  options.columns = this._trimColumns(options.columns || []);\n  this.allColumns = map(this._leafColumns(options.columns || []), this._prepareColumn);\n  this.columns = this._visibleColumns(this.allColumns);\n  this.options = options;\n  this.data = options.data || [];\n  this.aggregates = options.aggregates || {};\n  this.groups = [].concat(options.groups || []);\n  this.hasGroups = this.groups.length > 0;\n  this.hierarchy = options.hierarchy;\n  this.hasGroupHeaderColumn = this.columns.some(function (column) {\n    return column.groupHeaderColumnTemplate;\n  });\n  this.collapsible = this.options.collapsible;\n};\n\nExcelExporter.prototype.workbook = function workbook() {\n  var workbook = {\n    sheets: [{\n      columns: this._columns(),\n      rows: this.hierarchy ? this._hierarchyRows() : this._rows(),\n      freezePane: this._freezePane(),\n      filter: this._filter()\n    }]\n  };\n  return workbook;\n};\n\nExcelExporter.prototype._trimColumns = function _trimColumns(columns) {\n  var this$1 = this;\n  return columns.filter(function (column) {\n    var result = Boolean(column.field);\n\n    if (!result && column.columns) {\n      result = this$1._trimColumns(column.columns).length > 0;\n    }\n\n    return result;\n  });\n};\n\nExcelExporter.prototype._leafColumns = function _leafColumns(columns) {\n  var this$1 = this;\n  var result = [];\n\n  for (var idx = 0; idx < columns.length; idx++) {\n    if (!columns[idx].columns) {\n      result.push(columns[idx]);\n    } else {\n      result = result.concat(this$1._leafColumns(columns[idx].columns));\n    }\n  }\n\n  return result;\n};\n\nExcelExporter.prototype._prepareColumn = function _prepareColumn(column) {\n  if (!column.field) {\n    return null;\n  }\n\n  var value = function (dataItem) {\n    return getter(column.field, true)(dataItem);\n  };\n\n  var values = null;\n\n  if (column.values) {\n    values = {};\n    column.values.forEach(function (item) {\n      values[item.value] = item.text;\n    });\n\n    value = function (dataItem) {\n      return values[getter(column.field, true)(dataItem)];\n    };\n  }\n\n  return Object.assign({}, column, {\n    value: value,\n    values: values,\n    groupHeaderTemplate: column.groupHeaderTemplate ? TemplateService.compile(column.groupHeaderTemplate) : defaultGroupHeaderTemplate,\n    groupHeaderColumnTemplate: column.groupHeaderColumnTemplate ? TemplateService.compile(column.groupHeaderColumnTemplate) : null,\n    groupFooterTemplate: column.groupFooterTemplate ? TemplateService.compile(column.groupFooterTemplate) : null,\n    footerTemplate: column.footerTemplate ? TemplateService.compile(column.footerTemplate) : null\n  });\n};\n\nExcelExporter.prototype._filter = function _filter() {\n  if (!this.options.filterable) {\n    return null;\n  }\n\n  var depth = this._depth();\n\n  return {\n    from: depth,\n    to: depth + this.columns.length - 1\n  };\n};\n\nExcelExporter.prototype._createPaddingCells = function _createPaddingCells(length) {\n  var this$1 = this;\n  return createArray(length, function () {\n    return Object.assign({\n      background: \"#dfdfdf\",\n      color: \"#333\"\n    }, this$1.options.paddingCellOptions);\n  });\n};\n\nExcelExporter.prototype._dataRow = function _dataRow(dataItem, level, depth) {\n  var this$1 = this;\n\n  var cells = this._createPaddingCells(level); // grouped\n\n\n  if (this.hasGroups && depth && dataItem.items) {\n    cells = cells.concat(this._groupHeaderCells(dataItem, level, depth));\n\n    var rows = this._dataRows(dataItem.items, level + 1);\n\n    rows.unshift({\n      type: \"group-header\",\n      cells: cells,\n      level: this.collapsible ? level : null\n    });\n    return rows.concat(this._footer(dataItem, level));\n  }\n\n  var dataCells = [];\n\n  for (var cellIdx = 0; cellIdx < this.columns.length; cellIdx++) {\n    dataCells[cellIdx] = this$1._cell(dataItem, this$1.columns[cellIdx]);\n  }\n\n  if (this.hierarchy) {\n    dataCells[0].colSpan = depth - level + 1;\n  }\n\n  return [{\n    type: \"data\",\n    cells: cells.concat(dataCells),\n    level: this.collapsible ? level : null\n  }];\n};\n\nExcelExporter.prototype._groupHeaderCells = function _groupHeaderCells(dataItem, level, depth) {\n  var cells = [];\n  var column = this.allColumns.filter(function (column) {\n    return column.field === dataItem.field;\n  })[0] || {};\n  var title = column && column.title ? column.title : dataItem.field;\n  var template = column ? column.groupHeaderTemplate || column.groupHeaderColumnTemplate : null;\n  var group = Object.assign({\n    title: title,\n    field: dataItem.field,\n    value: column && column.values ? column.values[dataItem.value] : dataItem.value,\n    aggregates: dataItem.aggregates,\n    items: dataItem.items\n  }, dataItem.aggregates[dataItem.field]);\n  var value = template ? template(group) : title + \": \" + dataItem.value;\n  cells.push(Object.assign({\n    value: value,\n    background: \"#dfdfdf\",\n    color: \"#333\",\n    colSpan: (this.hasGroupHeaderColumn ? 1 : this.columns.length) + depth - level\n  }, column.groupHeaderCellOptions));\n\n  if (this.hasGroupHeaderColumn) {\n    this.columns.forEach(function (column, index) {\n      if (index > 0) {\n        cells.push(Object.assign({\n          background: \"#dfdfdf\",\n          color: \"#333\",\n          value: column.groupHeaderColumnTemplate ? column.groupHeaderColumnTemplate(Object.assign({\n            group: group\n          }, group, dataItem.aggregates[column.field])) : undefined\n        }, column.groupHeaderCellOptions));\n      }\n    });\n  }\n\n  return cells;\n};\n\nExcelExporter.prototype._dataRows = function _dataRows(dataItems, level) {\n  var this$1 = this;\n\n  var depth = this._depth();\n\n  var rows = [];\n\n  for (var idx = 0; idx < dataItems.length; idx++) {\n    rows.push.apply(rows, this$1._dataRow(dataItems[idx], level, depth));\n  }\n\n  return rows;\n};\n\nExcelExporter.prototype._hierarchyRows = function _hierarchyRows() {\n  var this$1 = this;\n\n  var depth = this._depth();\n\n  var data = this.data;\n  var itemLevel = this.hierarchy.itemLevel;\n  var itemId = this.hierarchy.itemId || defaultItemId;\n\n  var hasFooter = this._hasFooterTemplate();\n\n  var rows = [];\n  var parents = [];\n  var previousLevel = 0;\n  var previousItemId;\n\n  if (!hasFooter) {\n    this.collapsible = false;\n  }\n\n  for (var idx = 0; idx < data.length; idx++) {\n    var item = data[idx];\n    var level = itemLevel(item, idx);\n\n    if (hasFooter) {\n      if (level > previousLevel) {\n        parents.push({\n          id: previousItemId,\n          level: previousLevel\n        });\n      } else if (level < previousLevel) {\n        rows.push.apply(rows, this$1._hierarchyFooterRows(parents, level, depth));\n      }\n\n      previousLevel = level;\n      previousItemId = itemId(item, idx);\n    }\n\n    rows.push.apply(rows, this$1._dataRow(item, level + 1, depth));\n  }\n\n  if (hasFooter) {\n    rows.push.apply(rows, this._hierarchyFooterRows(parents, 0, depth));\n    var rootAggregate = data.length ? this.aggregates[data[0].parentId] : {};\n    rows.push(this._hierarchyFooter(rootAggregate, 0, depth));\n  }\n\n  this._prependHeaderRows(rows);\n\n  return rows;\n};\n\nExcelExporter.prototype._hierarchyFooterRows = function _hierarchyFooterRows(parents, currentLevel, depth) {\n  var this$1 = this;\n  var rows = [];\n\n  while (parents.length && parents[parents.length - 1].level >= currentLevel) {\n    var parent = parents.pop();\n    rows.push(this$1._hierarchyFooter(this$1.aggregates[parent.id], parent.level + 1, depth));\n  }\n\n  return rows;\n};\n\nExcelExporter.prototype._hasFooterTemplate = function _hasFooterTemplate() {\n  var columns = this.columns;\n\n  for (var idx = 0; idx < columns.length; idx++) {\n    if (columns[idx].footerTemplate) {\n      return true;\n    }\n  }\n};\n\nExcelExporter.prototype._hierarchyFooter = function _hierarchyFooter(aggregates, level, depth) {\n  var cells = this.columns.map(function (column, index) {\n    var colSpan = index ? 1 : depth - level + 1;\n\n    if (column.footerTemplate) {\n      var fieldAggregates = (aggregates || {})[column.field];\n      return Object.assign({\n        background: \"#dfdfdf\",\n        color: \"#333\",\n        colSpan: colSpan,\n        value: column.footerTemplate(Object.assign({\n          aggregates: aggregates\n        }, fieldAggregates))\n      }, column.footerCellOptions);\n    }\n\n    return Object.assign({\n      background: \"#dfdfdf\",\n      color: \"#333\",\n      colSpan: colSpan\n    }, column.footerCellOptions);\n  });\n  return {\n    type: \"footer\",\n    cells: this._createPaddingCells(level).concat(cells),\n    level: this.collapsible ? level : null\n  };\n};\n\nExcelExporter.prototype._footer = function _footer(dataItem, level) {\n  var rows = [];\n  var footer = this.columns.some(function (column) {\n    return column.groupFooterTemplate;\n  });\n  var templateData, group;\n\n  if (footer) {\n    group = {\n      group: {\n        items: dataItem.items,\n        field: dataItem.field,\n        value: dataItem.value\n      }\n    };\n    templateData = {};\n    Object.keys(dataItem.aggregates).forEach(function (key) {\n      templateData[key] = Object.assign({}, dataItem.aggregates[key], group);\n    });\n  }\n\n  var cells = this.columns.map(function (column) {\n    if (column.groupFooterTemplate) {\n      var data = Object.assign({}, templateData, dataItem.aggregates[column.field], group);\n      return Object.assign({\n        background: \"#dfdfdf\",\n        color: \"#333\",\n        value: column.groupFooterTemplate(data)\n      }, column.groupFooterCellOptions);\n    }\n\n    return Object.assign({\n      background: \"#dfdfdf\",\n      color: \"#333\"\n    }, column.groupFooterCellOptions);\n  });\n\n  if (footer) {\n    rows.push({\n      type: \"group-footer\",\n      cells: this._createPaddingCells(this.groups.length).concat(cells),\n      level: this.collapsible ? level : null\n    });\n  }\n\n  return rows;\n};\n\nExcelExporter.prototype._isColumnVisible = function _isColumnVisible(column) {\n  return this._visibleColumns([column]).length > 0 && (column.field || column.columns);\n};\n\nExcelExporter.prototype._visibleColumns = function _visibleColumns(columns) {\n  var this$1 = this;\n  return columns.filter(function (column) {\n    var exportable = column.exportable;\n\n    if (typeof exportable === 'object') {\n      exportable = column.exportable.excel;\n    }\n\n    var visibleInExport = !column.hidden && exportable !== false;\n    var visibleInExportOnly = column.hidden && exportable === true;\n    var visible = visibleInExport || visibleInExportOnly;\n\n    if (visible && column.columns) {\n      visible = this$1._visibleColumns(column.columns).length > 0;\n    }\n\n    return visible;\n  });\n};\n\nExcelExporter.prototype._headerRow = function _headerRow(row, groups) {\n  var this$1 = this;\n  var headers = row.cells.map(function (cell) {\n    return Object.assign(cell, {\n      colSpan: cell.colSpan > 1 ? cell.colSpan : 1,\n      rowSpan: row.rowSpan > 1 && !cell.colSpan ? row.rowSpan : 1\n    });\n  });\n\n  if (this.hierarchy && headers[0].firstCell) {\n    headers[0].colSpan += this._depth();\n  }\n\n  return {\n    type: \"header\",\n    cells: createArray(groups.length, function () {\n      return Object.assign({\n        background: \"#7a7a7a\",\n        color: \"#fff\"\n      }, this$1.options.headerPaddingCellOptions);\n    }).concat(headers)\n  };\n};\n\nExcelExporter.prototype._prependHeaderRows = function _prependHeaderRows(rows) {\n  var this$1 = this;\n  var groups = this.groups;\n  var headerRows = [{\n    rowSpan: 1,\n    cells: [],\n    index: 0\n  }];\n\n  this._prepareHeaderRows(headerRows, this.options.columns);\n\n  for (var idx = headerRows.length - 1; idx >= 0; idx--) {\n    rows.unshift(this$1._headerRow(headerRows[idx], groups));\n  }\n};\n\nExcelExporter.prototype._prepareHeaderRows = function _prepareHeaderRows(rows, columns, parentCell, parentRow) {\n  var this$1 = this;\n  var row = parentRow || rows[rows.length - 1];\n  var childRow = rows[row.index + 1];\n  var totalColSpan = 0;\n\n  for (var idx = 0; idx < columns.length; idx++) {\n    var column = columns[idx];\n\n    if (this$1._isColumnVisible(column)) {\n      var cell = Object.assign({\n        background: \"#7a7a7a\",\n        color: \"#fff\",\n        value: column.title || column.field,\n        colSpan: 0,\n        firstCell: idx === 0 && (!parentCell || parentCell.firstCell)\n      }, column.headerCellOptions);\n      row.cells.push(cell);\n\n      if (column.columns && column.columns.length) {\n        if (!childRow) {\n          childRow = {\n            rowSpan: 0,\n            cells: [],\n            index: rows.length\n          };\n          rows.push(childRow);\n        }\n\n        cell.colSpan = this$1._trimColumns(this$1._visibleColumns(column.columns)).length;\n\n        this$1._prepareHeaderRows(rows, column.columns, cell, childRow);\n\n        totalColSpan += cell.colSpan - 1;\n        row.rowSpan = rows.length - row.index;\n      }\n    }\n  }\n\n  if (parentCell) {\n    parentCell.colSpan += totalColSpan;\n  }\n};\n\nExcelExporter.prototype._rows = function _rows() {\n  var this$1 = this;\n\n  var rows = this._dataRows(this.data, 0);\n\n  if (this.columns.length) {\n    this._prependHeaderRows(rows);\n\n    var footer = false;\n    var cells = this.columns.map(function (column) {\n      if (column.footerTemplate) {\n        footer = true;\n        return Object.assign({\n          background: \"#dfdfdf\",\n          color: \"#333\",\n          value: column.footerTemplate(Object.assign({}, this$1.aggregates, this$1.aggregates[column.field]))\n        }, column.footerCellOptions);\n      }\n\n      return Object.assign({\n        background: \"#dfdfdf\",\n        color: \"#333\"\n      }, column.footerCellOptions);\n    });\n\n    if (footer) {\n      rows.push({\n        type: \"footer\",\n        cells: this._createPaddingCells(this.groups.length).concat(cells)\n      });\n    }\n  }\n\n  return rows;\n};\n\nExcelExporter.prototype._headerDepth = function _headerDepth(columns) {\n  var this$1 = this;\n  var result = 1;\n  var max = 0;\n\n  for (var idx = 0; idx < columns.length; idx++) {\n    if (columns[idx].columns) {\n      var temp = this$1._headerDepth(columns[idx].columns);\n\n      if (temp > max) {\n        max = temp;\n      }\n    }\n  }\n\n  return result + max;\n};\n\nExcelExporter.prototype._freezePane = function _freezePane() {\n  var columns = this._visibleColumns(this.options.columns || []);\n\n  var colSplit = this._visibleColumns(this._trimColumns(this._leafColumns(columns.filter(function (column) {\n    return column.locked;\n  })))).length;\n\n  return {\n    rowSplit: this._headerDepth(columns),\n    colSplit: colSplit ? colSplit + this.groups.length : 0\n  };\n};\n\nExcelExporter.prototype._cell = function _cell(dataItem, column) {\n  return Object.assign({\n    value: column.value(dataItem)\n  }, column.cellOptions);\n};\n\nExcelExporter.prototype._depth = function _depth() {\n  var depth = 0;\n\n  if (this.hierarchy) {\n    depth = this.hierarchy.depth;\n  } else {\n    depth = this.groups.length;\n  }\n\n  return depth;\n};\n\nExcelExporter.prototype._columns = function _columns() {\n  var depth = this._depth();\n\n  var columns = createArray(depth, function () {\n    return {\n      width: 20\n    };\n  });\n  return columns.concat(this.columns.map(function (column) {\n    return {\n      width: parseInt(column.width, 10),\n      autoWidth: column.width ? false : true\n    };\n  }));\n};\n\nexport default ExcelExporter;","map":{"version":3,"sources":["C:/Users/pramod.katiyar/Documents/Project-git-download/nodeReactfrontend-main/node_modules/@progress/kendo-ooxml/dist/es/excel-exporter.js"],"names":["TemplateService","getter","map","defaultGroupHeaderTemplate","data","title","value","createArray","length","callback","result","idx","push","defaultItemId","item","id","ExcelExporter","options","columns","_trimColumns","allColumns","_leafColumns","_prepareColumn","_visibleColumns","aggregates","groups","concat","hasGroups","hierarchy","hasGroupHeaderColumn","some","column","groupHeaderColumnTemplate","collapsible","prototype","workbook","sheets","_columns","rows","_hierarchyRows","_rows","freezePane","_freezePane","filter","_filter","this$1","Boolean","field","dataItem","values","forEach","text","Object","assign","groupHeaderTemplate","compile","groupFooterTemplate","footerTemplate","filterable","depth","_depth","from","to","_createPaddingCells","background","color","paddingCellOptions","_dataRow","level","cells","items","_groupHeaderCells","_dataRows","unshift","type","_footer","dataCells","cellIdx","_cell","colSpan","template","group","groupHeaderCellOptions","index","undefined","dataItems","apply","itemLevel","itemId","hasFooter","_hasFooterTemplate","parents","previousLevel","previousItemId","_hierarchyFooterRows","rootAggregate","parentId","_hierarchyFooter","_prependHeaderRows","currentLevel","parent","pop","fieldAggregates","footerCellOptions","footer","templateData","keys","key","groupFooterCellOptions","_isColumnVisible","exportable","excel","visibleInExport","hidden","visibleInExportOnly","visible","_headerRow","row","headers","cell","rowSpan","firstCell","headerPaddingCellOptions","headerRows","_prepareHeaderRows","parentCell","parentRow","childRow","totalColSpan","headerCellOptions","_headerDepth","max","temp","colSplit","locked","rowSplit","cellOptions","width","parseInt","autoWidth"],"mappings":"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","sourcesContent":["import TemplateService from './services/template-service';\nimport getter from './utils/getter';\nimport map from './utils/map';\n\nfunction defaultGroupHeaderTemplate(data) {\n    return ((data.title) + \": \" + (data.value));\n}\n\nfunction createArray(length, callback) {\n    var result = [];\n\n    for (var idx = 0; idx < length; idx++) {\n        result.push(callback(idx));\n    }\n\n    return result;\n}\n\nfunction defaultItemId(item) {\n    return item.id;\n}\n\nvar ExcelExporter = function ExcelExporter(options) {\n    options.columns = this._trimColumns(options.columns || []);\n\n    this.allColumns = map(this._leafColumns(options.columns || []), this._prepareColumn);\n\n    this.columns = this._visibleColumns(this.allColumns);\n\n    this.options = options;\n    this.data = options.data || [];\n    this.aggregates = options.aggregates || {};\n    this.groups = [].concat(options.groups || []);\n    this.hasGroups = this.groups.length > 0;\n    this.hierarchy = options.hierarchy;\n    this.hasGroupHeaderColumn = this.columns.some(function (column) { return column.groupHeaderColumnTemplate; });\n    this.collapsible = this.options.collapsible;\n};\n\nExcelExporter.prototype.workbook = function workbook () {\n    var workbook = {\n        sheets: [ {\n            columns: this._columns(),\n            rows: this.hierarchy ? this._hierarchyRows() : this._rows(),\n            freezePane: this._freezePane(),\n            filter: this._filter()\n        } ]\n    };\n\n    return workbook;\n};\n\nExcelExporter.prototype._trimColumns = function _trimColumns (columns) {\n        var this$1 = this;\n\n    return columns.filter(function (column) {\n        var result = Boolean(column.field);\n\n        if (!result && column.columns) {\n            result = this$1._trimColumns(column.columns).length > 0;\n        }\n\n        return result;\n    });\n};\n\nExcelExporter.prototype._leafColumns = function _leafColumns (columns) {\n        var this$1 = this;\n\n    var result = [];\n\n    for (var idx = 0; idx < columns.length; idx++) {\n        if (!columns[idx].columns) {\n            result.push(columns[idx]);\n        } else {\n            result = result.concat(this$1._leafColumns(columns[idx].columns));\n        }\n    }\n\n    return result;\n};\n\nExcelExporter.prototype._prepareColumn = function _prepareColumn (column) {\n    if (!column.field) {\n        return null;\n    }\n\n    var value = function(dataItem) {\n        return getter(column.field, true)(dataItem);\n    };\n\n    var values = null;\n\n    if (column.values) {\n        values = {};\n\n        column.values.forEach(function(item) {\n            values[item.value] = item.text;\n        });\n\n        value = function(dataItem) {\n            return values[getter(column.field, true)(dataItem)];\n        };\n    }\n\n    return Object.assign({}, column, {\n        value: value,\n        values: values,\n        groupHeaderTemplate: column.groupHeaderTemplate ? TemplateService.compile(column.groupHeaderTemplate) : defaultGroupHeaderTemplate,\n        groupHeaderColumnTemplate: column.groupHeaderColumnTemplate ? TemplateService.compile(column.groupHeaderColumnTemplate) : null,\n        groupFooterTemplate: column.groupFooterTemplate ? TemplateService.compile(column.groupFooterTemplate) : null,\n        footerTemplate: column.footerTemplate ? TemplateService.compile(column.footerTemplate) : null\n    });\n};\n\nExcelExporter.prototype._filter = function _filter () {\n    if (!this.options.filterable) {\n        return null;\n    }\n\n    var depth = this._depth();\n\n    return {\n        from: depth,\n        to: depth + this.columns.length - 1\n    };\n};\n\nExcelExporter.prototype._createPaddingCells = function _createPaddingCells (length) {\n        var this$1 = this;\n\n    return createArray(length, function () { return Object.assign({\n        background: \"#dfdfdf\",\n        color: \"#333\"\n    }, this$1.options.paddingCellOptions); });\n};\n\nExcelExporter.prototype._dataRow = function _dataRow (dataItem, level, depth) {\n        var this$1 = this;\n\n    var cells = this._createPaddingCells(level);\n\n    // grouped\n    if (this.hasGroups && depth && dataItem.items) {\n        cells = cells.concat(this._groupHeaderCells(dataItem, level, depth));\n        var rows = this._dataRows(dataItem.items, level + 1);\n\n        rows.unshift({\n            type: \"group-header\",\n            cells: cells,\n            level: this.collapsible ? level : null\n        });\n\n        return rows.concat(this._footer(dataItem, level));\n    }\n\n    var dataCells = [];\n\n    for (var cellIdx = 0; cellIdx < this.columns.length; cellIdx++) {\n        dataCells[cellIdx] = this$1._cell(dataItem, this$1.columns[cellIdx]);\n    }\n\n    if (this.hierarchy) {\n        dataCells[0].colSpan = depth - level + 1;\n    }\n\n    return [ {\n        type: \"data\",\n        cells: cells.concat(dataCells),\n        level: this.collapsible ? level : null\n    } ];\n};\n\nExcelExporter.prototype._groupHeaderCells = function _groupHeaderCells (dataItem, level, depth) {\n    var cells = [];\n\n    var column = this.allColumns.filter(function(column) {\n        return column.field === dataItem.field;\n    })[0] || {};\n\n    var title = column && column.title ? column.title : dataItem.field;\n    var template = column ? column.groupHeaderTemplate || column.groupHeaderColumnTemplate : null;\n    var group = Object.assign({\n        title: title,\n        field: dataItem.field,\n        value: column && column.values ? column.values[dataItem.value] : dataItem.value,\n        aggregates: dataItem.aggregates,\n        items: dataItem.items\n    }, dataItem.aggregates[dataItem.field]);\n\n    var value = template ? template(group) : (title + \": \" + (dataItem.value));\n\n    cells.push(Object.assign({\n        value: value,\n        background: \"#dfdfdf\",\n        color: \"#333\",\n        colSpan: (this.hasGroupHeaderColumn ? 1 : this.columns.length) + depth - level\n    }, column.groupHeaderCellOptions));\n\n    if (this.hasGroupHeaderColumn) {\n        this.columns.forEach(function(column, index) {\n            if (index > 0) {\n                cells.push(Object.assign({\n                    background: \"#dfdfdf\",\n                    color: \"#333\",\n                    value: column.groupHeaderColumnTemplate ?\n                        column.groupHeaderColumnTemplate(Object.assign({ group: group }, group, dataItem.aggregates[column.field])) :\n                        undefined\n                }, column.groupHeaderCellOptions));\n            }\n        });\n    }\n\n    return cells;\n};\n\nExcelExporter.prototype._dataRows = function _dataRows (dataItems, level) {\n        var this$1 = this;\n\n    var depth = this._depth();\n    var rows = [];\n\n    for (var idx = 0; idx < dataItems.length; idx++) {\n        rows.push.apply(rows, this$1._dataRow(dataItems[idx], level, depth));\n    }\n\n    return rows;\n};\n\nExcelExporter.prototype._hierarchyRows = function _hierarchyRows () {\n        var this$1 = this;\n\n    var depth = this._depth();\n    var data = this.data;\n    var itemLevel = this.hierarchy.itemLevel;\n    var itemId = this.hierarchy.itemId || defaultItemId;\n    var hasFooter = this._hasFooterTemplate();\n    var rows = [];\n    var parents = [];\n    var previousLevel = 0;\n    var previousItemId;\n\n    if (!hasFooter) {\n        this.collapsible = false;\n    }\n\n    for (var idx = 0; idx < data.length; idx++) {\n        var item = data[idx];\n        var level = itemLevel(item, idx);\n\n        if (hasFooter) {\n            if (level > previousLevel) {\n                parents.push({ id: previousItemId, level: previousLevel });\n            } else if (level < previousLevel) {\n                rows.push.apply(rows, this$1._hierarchyFooterRows(parents, level, depth));\n            }\n\n            previousLevel = level;\n            previousItemId = itemId(item, idx);\n        }\n\n        rows.push.apply(rows, this$1._dataRow(item, level + 1, depth));\n    }\n\n    if (hasFooter) {\n        rows.push.apply(rows, this._hierarchyFooterRows(parents, 0, depth));\n\n        var rootAggregate = data.length ? this.aggregates[data[0].parentId] : {};\n        rows.push(this._hierarchyFooter(rootAggregate, 0, depth));\n    }\n\n    this._prependHeaderRows(rows);\n\n    return rows;\n};\n\nExcelExporter.prototype._hierarchyFooterRows = function _hierarchyFooterRows (parents, currentLevel, depth) {\n        var this$1 = this;\n\n    var rows = [];\n    while (parents.length && parents[parents.length - 1].level >= currentLevel) {\n        var parent = parents.pop();\n        rows.push(this$1._hierarchyFooter(this$1.aggregates[parent.id], parent.level + 1, depth));\n    }\n\n    return rows;\n};\n\nExcelExporter.prototype._hasFooterTemplate = function _hasFooterTemplate () {\n    var columns = this.columns;\n    for (var idx = 0; idx < columns.length; idx++) {\n        if (columns[idx].footerTemplate) {\n            return true;\n        }\n    }\n};\n\nExcelExporter.prototype._hierarchyFooter = function _hierarchyFooter (aggregates, level, depth) {\n    var cells = this.columns.map(function(column, index) {\n        var colSpan = index ? 1 : depth - level + 1;\n        if (column.footerTemplate) {\n            var fieldAggregates = (aggregates || {})[column.field];\n            return Object.assign({\n                background: \"#dfdfdf\",\n                color: \"#333\",\n                colSpan: colSpan,\n                value: column.footerTemplate(Object.assign({ aggregates: aggregates }, fieldAggregates))\n            }, column.footerCellOptions);\n        }\n\n        return Object.assign({\n            background: \"#dfdfdf\",\n            color: \"#333\",\n            colSpan: colSpan\n        }, column.footerCellOptions);\n    });\n\n    return {\n        type: \"footer\",\n        cells: this._createPaddingCells(level).concat(cells),\n        level: this.collapsible ? level : null\n    };\n};\n\nExcelExporter.prototype._footer = function _footer (dataItem, level) {\n    var rows = [];\n    var footer = this.columns.some(function (column) { return column.groupFooterTemplate; });\n\n    var templateData, group;\n    if (footer) {\n        group = {\n            group: { items: dataItem.items,\n                     field: dataItem.field,\n                     value: dataItem.value }\n        };\n        templateData = {};\n        Object.keys(dataItem.aggregates).forEach(function (key) {\n            templateData[key] = Object.assign({}, dataItem.aggregates[key], group);\n        });\n    }\n\n    var cells = this.columns.map(function (column) {\n        if (column.groupFooterTemplate) {\n            var data = Object.assign({}, templateData, dataItem.aggregates[column.field], group);\n            return Object.assign({\n                background: \"#dfdfdf\",\n                color: \"#333\",\n                value: column.groupFooterTemplate(data)\n            }, column.groupFooterCellOptions);\n        }\n\n        return Object.assign({\n            background: \"#dfdfdf\",\n            color: \"#333\"\n        }, column.groupFooterCellOptions);\n    });\n\n    if (footer) {\n        rows.push({\n            type: \"group-footer\",\n            cells: this._createPaddingCells(this.groups.length).concat(cells),\n            level: this.collapsible ? level : null\n        });\n    }\n\n    return rows;\n};\n\nExcelExporter.prototype._isColumnVisible = function _isColumnVisible (column) {\n    return this._visibleColumns([ column ]).length > 0 && (column.field || column.columns);\n};\n\nExcelExporter.prototype._visibleColumns = function _visibleColumns (columns) {\n        var this$1 = this;\n\n    return columns.filter(function (column) {\n        var exportable = column.exportable;\n        if (typeof exportable === 'object') {\n            exportable = column.exportable.excel;\n        }\n\n        var visibleInExport = !column.hidden && exportable !== false;\n        var visibleInExportOnly = column.hidden && exportable === true;\n        var visible = visibleInExport || visibleInExportOnly;\n        if (visible && column.columns) {\n            visible = this$1._visibleColumns(column.columns).length > 0;\n        }\n        return visible;\n    });\n};\n\nExcelExporter.prototype._headerRow = function _headerRow (row, groups) {\n        var this$1 = this;\n\n    var headers = row.cells.map(function(cell) {\n        return Object.assign(cell, {\n            colSpan: cell.colSpan > 1 ? cell.colSpan : 1,\n            rowSpan: row.rowSpan > 1 && !cell.colSpan ? row.rowSpan : 1\n        });\n    });\n\n    if (this.hierarchy && headers[0].firstCell) {\n        headers[0].colSpan += this._depth();\n    }\n\n    return {\n        type: \"header\",\n        cells: createArray(groups.length, function () { return Object.assign({\n            background: \"#7a7a7a\",\n            color: \"#fff\"\n        }, this$1.options.headerPaddingCellOptions); }).concat(headers)\n    };\n};\n\nExcelExporter.prototype._prependHeaderRows = function _prependHeaderRows (rows) {\n        var this$1 = this;\n\n    var groups = this.groups;\n\n    var headerRows = [ { rowSpan: 1, cells: [], index: 0 } ];\n\n    this._prepareHeaderRows(headerRows, this.options.columns);\n\n    for (var idx = headerRows.length - 1; idx >= 0; idx--) {\n        rows.unshift(this$1._headerRow(headerRows[idx], groups));\n    }\n};\n\nExcelExporter.prototype._prepareHeaderRows = function _prepareHeaderRows (rows, columns, parentCell, parentRow) {\n        var this$1 = this;\n\n    var row = parentRow || rows[rows.length - 1];\n    var childRow = rows[row.index + 1];\n    var totalColSpan = 0;\n\n    for (var idx = 0; idx < columns.length; idx++) {\n        var column = columns[idx];\n        if (this$1._isColumnVisible(column)) {\n\n            var cell = Object.assign({\n                background: \"#7a7a7a\",\n                color: \"#fff\",\n                value: column.title || column.field,\n                colSpan: 0,\n                firstCell: idx === 0 && (!parentCell || parentCell.firstCell)\n            }, column.headerCellOptions);\n            row.cells.push(cell);\n\n            if (column.columns && column.columns.length) {\n                if (!childRow) {\n                    childRow = { rowSpan: 0, cells: [], index: rows.length };\n                    rows.push(childRow);\n                }\n                cell.colSpan = this$1._trimColumns(this$1._visibleColumns(column.columns)).length;\n                this$1._prepareHeaderRows(rows, column.columns, cell, childRow);\n                totalColSpan += cell.colSpan - 1;\n                row.rowSpan = rows.length - row.index;\n            }\n        }\n    }\n\n    if (parentCell) {\n        parentCell.colSpan += totalColSpan;\n    }\n};\n\nExcelExporter.prototype._rows = function _rows () {\n        var this$1 = this;\n\n    var rows = this._dataRows(this.data, 0);\n\n    if (this.columns.length) {\n        this._prependHeaderRows(rows);\n        var footer = false;\n\n        var cells = this.columns.map(function (column) {\n            if (column.footerTemplate) {\n                footer = true;\n\n                return Object.assign({\n                    background: \"#dfdfdf\",\n                    color: \"#333\",\n                    value: column.footerTemplate(Object.assign({}, this$1.aggregates, this$1.aggregates[column.field]))\n                }, column.footerCellOptions);\n            }\n\n            return Object.assign({\n                background: \"#dfdfdf\",\n                color: \"#333\"\n            }, column.footerCellOptions);\n        });\n\n        if (footer) {\n            rows.push({\n                type: \"footer\",\n                cells: this._createPaddingCells(this.groups.length).concat(cells)\n            });\n        }\n    }\n\n    return rows;\n};\n\nExcelExporter.prototype._headerDepth = function _headerDepth (columns) {\n        var this$1 = this;\n\n    var result = 1;\n    var max = 0;\n\n    for (var idx = 0; idx < columns.length; idx++) {\n        if (columns[idx].columns) {\n            var temp = this$1._headerDepth(columns[idx].columns);\n            if (temp > max) {\n                max = temp;\n            }\n        }\n    }\n    return result + max;\n};\n\nExcelExporter.prototype._freezePane = function _freezePane () {\n    var columns = this._visibleColumns(this.options.columns || []);\n\n    var colSplit = this._visibleColumns(this._trimColumns(this._leafColumns(columns.filter(function(column) {\n        return column.locked;\n    })))).length;\n\n    return {\n        rowSplit: this._headerDepth(columns),\n        colSplit: colSplit ? colSplit + this.groups.length : 0\n    };\n};\n\nExcelExporter.prototype._cell = function _cell (dataItem, column) {\n    return Object.assign({\n        value: column.value(dataItem)\n    }, column.cellOptions);\n};\n\nExcelExporter.prototype._depth = function _depth () {\n    var depth = 0;\n\n    if (this.hierarchy) {\n        depth = this.hierarchy.depth;\n    } else {\n        depth = this.groups.length;\n    }\n\n    return depth;\n};\n\nExcelExporter.prototype._columns = function _columns () {\n    var depth = this._depth();\n    var columns = createArray(depth, function () { return ({ width: 20 }); });\n\n    return columns.concat(this.columns.map(function(column) {\n        return {\n            width: parseInt(column.width, 10),\n            autoWidth: column.width ? false : true\n        };\n    }));\n};\n\nexport default ExcelExporter;\n"]},"metadata":{},"sourceType":"module"}